<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Griesoft.AspNetCore.ReCaptcha</name>
    </assembly>
    <members>
        <member name="T:System.Diagnostics.CodeAnalysis.AllowNullAttribute">
            <summary>Specifies that null is allowed as an input even if the corresponding type disallows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DisallowNullAttribute">
            <summary>Specifies that null is disallowed as an input even if the corresponding type allows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullAttribute">
            <summary>Specifies that an output may be null even if the corresponding type disallows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullAttribute">
            <summary>Specifies that an output will not be null even if the corresponding type allows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute">
            <summary>
                Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue"/>, the parameter may be null even if the corresponding type disallows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.#ctor(System.Boolean)">
            <summary>Initializes the attribute with the specified return value condition.</summary>
            <param name="returnValue">
                The return value condition. If the method returns this value, the associated parameter may be null.
            </param>
        </member>
        <member name="T:Griesoft.AspNetCore.ReCaptcha.Clients.IRecaptchaHttpClientFactory">
            <summary>
            Constructs http client used for verifying captcha result with Google
            </summary>
        </member>
        <member name="M:Griesoft.AspNetCore.ReCaptcha.Clients.IRecaptchaHttpClientFactory.CreateClient">
            <summary>
            Create HttpClient with preconfigured options to communicate with Google reCatpcha REST service
            </summary>
            <returns></returns>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue">
            <summary>Gets the return value condition.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute">
            <summary>Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue"/>, the parameter will not be null even if the corresponding type allows it.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.#ctor(System.Boolean)">
            <summary>Initializes the attribute with the specified return value condition.</summary>
            <param name="returnValue">
            The return value condition. If the method returns this value, the associated parameter will not be null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue">
            <summary>Gets the return value condition.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute">
            <summary>Specifies that the output will be non-null if the named parameter is non-null.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.#ctor(System.String)">
            <summary>Initializes the attribute with the associated parameter name.</summary>
            <param name="parameterName">
            The associated parameter name.  The output will be non-null if the argument to the parameter specified is non-null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.ParameterName">
            <summary>Gets the associated parameter name.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute">
            <summary>Applied to a method that will never return under any circumstance.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute">
            <summary>Specifies that the method will not return if the associated Boolean parameter is passed the specified value.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.#ctor(System.Boolean)">
            <summary>Initializes the attribute with the specified parameter value.</summary>
            <param name="parameterValue">
            The condition parameter value. Code after the method will be considered unreachable by diagnostics if the argument to
            the associated parameter matches this value.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.ParameterValue">
            <summary>Gets the condition parameter value.</summary>
        </member>
        <member name="T:Griesoft.AspNetCore.ReCaptcha.Configuration.RecaptchaOptions">
            <summary>
            Options for this reCAPTCHA service. You can set your global default values for the service on app startup.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.Configuration.RecaptchaOptions.UseRemoteIp">
            <summary>
            If set to true the remote IP will be send to Google when verifying the response token. The default is false.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.Configuration.RecaptchaOptions.ValidationFailedAction">
            <summary>
            Configure the service on a global level whether it should block / short circuit the request pipeline 
            when the reCPATCHA response token is invalid or not. The default is <see cref="F:Griesoft.AspNetCore.ReCaptcha.ValidationFailedAction.BlockRequest"/>.
            </summary>
            <remarks>
            This affects only the action filter logic of this service. This can also be set individually 
            for each controller or action by setting a value to <see cref="P:Griesoft.AspNetCore.ReCaptcha.ValidateRecaptchaAttribute.ValidationFailedAction"/>,
            like this <code>[ValidateRecaptcha(ValidationFailedAction = ValidationFailedAction.ContinueRequest)]</code>.
            
            The value may never be set to <see cref="F:Griesoft.AspNetCore.ReCaptcha.ValidationFailedAction.Unspecified"/>, it will always be translated to
            <see cref="F:Griesoft.AspNetCore.ReCaptcha.ValidationFailedAction.BlockRequest"/>.
            </remarks>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.Configuration.RecaptchaOptions.Size">
            <summary>
            The global default size value for a reCAPTCHA tag.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.Configuration.RecaptchaOptions.Theme">
            <summary>
            The global default theme value for a reCAPTCHA tag.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.Configuration.RecaptchaOptions.Badge">
            <summary>
            The global default badge value for an invisible reCAPTCHA tag.
            </summary>
        </member>
        <member name="T:Griesoft.AspNetCore.ReCaptcha.Configuration.RecaptchaServiceConstants">
            <summary>
            Constant values for this service.
            </summary>
        </member>
        <member name="F:Griesoft.AspNetCore.ReCaptcha.Configuration.RecaptchaServiceConstants.GoogleRecaptchaEndpoint">
            <summary>
            The validation endpoint.
            </summary>
        </member>
        <member name="F:Griesoft.AspNetCore.ReCaptcha.Configuration.RecaptchaServiceConstants.TokenKeyName">
            <summary>
            The header key name under which the token is stored.
            </summary>
        </member>
        <member name="F:Griesoft.AspNetCore.ReCaptcha.Configuration.RecaptchaServiceConstants.TokenKeyNameLower">
            <summary>
            The header key name under which the token is stored in lower case.
            </summary>
        </member>
        <member name="F:Griesoft.AspNetCore.ReCaptcha.Configuration.RecaptchaServiceConstants.SettingsSectionKey">
            <summary>
            The section name in the appsettings.json from which the settings are read.
            </summary>
        </member>
        <member name="F:Griesoft.AspNetCore.ReCaptcha.Configuration.RecaptchaServiceConstants.RecaptchaServiceHttpClientName">
            <summary>
            The named HttpClient name that we use in the IRecpatchaService.
            </summary>
        </member>
        <member name="T:Griesoft.AspNetCore.ReCaptcha.Configuration.RecaptchaSettings">
            <summary>
            Mandatory settings for this reCAPTCHA service. The values for this object will be read from your appsettings.json file.
            </summary>
            <remarks>
            For more information about configuration in ASP.NET Core check out Microsoft docs: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/configuration/?view=aspnetcore-3.1
            </remarks>
            <seealso cref="N:Microsoft.Extensions.Configuration"/>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.Configuration.RecaptchaSettings.SiteKey">
            <summary>
            The reCAPTCHA site key.
            </summary>
            <remarks>
            Will be added to reCAPTCHA HTML elements as the data-sitekey attribute.
            </remarks>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.Configuration.RecaptchaSettings.SecretKey">
            <summary>
            The reCAPTCHA secret key.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.Configuration.RecaptchaSettings.UseProxy">
            <summary>
            Indicates if proxy server should be used to forward http client requests
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.Configuration.RecaptchaSettings.ProxyAddress">
            <summary>
            Proxy server address to be used to http client
            </summary>
        </member>
        <member name="T:Griesoft.AspNetCore.ReCaptcha.TagHelpers.BadgePosition">
            <summary>
            Recaptcha badge options for the <see cref="T:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaInvisibleTagHelper"/>.
            </summary>
        </member>
        <member name="F:Griesoft.AspNetCore.ReCaptcha.TagHelpers.BadgePosition.BottomLeft">
            <summary>
            Position the badge in the bottom left of your page.
            </summary>
        </member>
        <member name="F:Griesoft.AspNetCore.ReCaptcha.TagHelpers.BadgePosition.BottomRight">
            <summary>
            Position the badge in the bottom right of your page.
            </summary>
        </member>
        <member name="F:Griesoft.AspNetCore.ReCaptcha.TagHelpers.BadgePosition.Inline">
            <summary>
            Use this if you want to customize the position with CSS yourself.
            </summary>
        </member>
        <member name="T:Griesoft.AspNetCore.ReCaptcha.TagHelpers.Render">
            <summary>
            Recaptcha rendering options for the <see cref="T:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaScriptTagHelper"/>.
            </summary>
        </member>
        <member name="F:Griesoft.AspNetCore.ReCaptcha.TagHelpers.Render.Onload">
            <summary>
            The default rendering option. This will render your V2 reCAPTCHA elements automatically after the script has been loaded.
            </summary>
        </member>
        <member name="F:Griesoft.AspNetCore.ReCaptcha.TagHelpers.Render.Explicit">
            <summary>
            When rendering your reCAPTCHA elements explicitly a given onloadCallback will be called after the script has been loaded.
            </summary>
        </member>
        <member name="F:Griesoft.AspNetCore.ReCaptcha.TagHelpers.Render.V3">
            <summary>
            Loads the reCAPTCHA V3 script.
            </summary>
        </member>
        <member name="T:Griesoft.AspNetCore.ReCaptcha.TagHelpers.Size">
            <summary>
            Recaptcha size options for the <see cref="T:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaTagHelper"/>.
            </summary>
        </member>
        <member name="F:Griesoft.AspNetCore.ReCaptcha.TagHelpers.Size.Normal">
            <summary>
            The default value for an reCAPTCHA element.
            </summary>
        </member>
        <member name="F:Griesoft.AspNetCore.ReCaptcha.TagHelpers.Size.Compact">
            <summary>
            A smaller and compact style option for the reCAPTCHA element.
            </summary>
        </member>
        <member name="T:Griesoft.AspNetCore.ReCaptcha.TagHelpers.Theme">
            <summary>
            Recaptcha theme options for the <see cref="T:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaTagHelper"/>.
            </summary>
        </member>
        <member name="F:Griesoft.AspNetCore.ReCaptcha.TagHelpers.Theme.Light">
            <summary>
            
            </summary>
        </member>
        <member name="F:Griesoft.AspNetCore.ReCaptcha.TagHelpers.Theme.Dark">
            <summary>
            
            </summary>
        </member>
        <member name="T:Griesoft.AspNetCore.ReCaptcha.TagHelpers.CallbackScriptTagHelperComponent">
            <summary>
            This tag helper component is used to add a short callback script to the bottom of a body tag.
            </summary>
            <remarks>
            The callback script is used as a default callback function to submit a form after a reCAPTCHA challenge was successful.
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaInvisibleTagHelper" -->
        <member name="M:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaInvisibleTagHelper.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Griesoft.AspNetCore.ReCaptcha.Configuration.RecaptchaSettings},Microsoft.Extensions.Options.IOptionsMonitor{Griesoft.AspNetCore.ReCaptcha.Configuration.RecaptchaOptions},Microsoft.AspNetCore.Mvc.Razor.TagHelpers.ITagHelperComponentManager)">
            <summary>
            
            </summary>
            <param name="settings"></param>
            <param name="options"></param>
            <param name="tagHelperComponentManager"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaInvisibleTagHelper.Badge">
            <summary>
            Set the badge position for the reCAPTCHA element.
            Set this to <see cref="F:Griesoft.AspNetCore.ReCaptcha.TagHelpers.BadgePosition.Inline"/> when you want to position it with CSS yourself.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaInvisibleTagHelper.TabIndex">
            <summary>
            Set the tabindex of the reCAPTCHA element. If other elements in your page use tabindex, it should be set to make user navigation easier.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaInvisibleTagHelper.FormId">
            <summary>
            The id of the form that will be submitted after a successful reCAPTCHA challenge. 
            </summary>
            <remarks>This does only apply when not specifying a <see cref="P:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaInvisibleTagHelper.Callback"/>.</remarks>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaInvisibleTagHelper.Callback">
            <summary>
            Set the name of your callback function, which is called when the reCAPTCHA challenge was successful. 
            A "g-recaptcha-response" token is added to your callback function parameters for server-side verification.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaInvisibleTagHelper.ExpiredCallback">
            <summary>
            Set the name of your callback function, executed when the reCAPTCHA response expires and the user needs to re-verify.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaInvisibleTagHelper.ErrorCallback">
            <summary>
            Set the name of your callback function, executed when reCAPTCHA encounters an error (usually network connectivity) and cannot continue until connectivity is restored. 
            If you specify a function here, you are responsible for informing the user that they should retry.
            </summary>
        </member>
        <member name="M:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaInvisibleTagHelper.Process(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)">
            <inheritdoc />
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.InvalidOperationException">Thrown when both <see cref="P:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaInvisibleTagHelper.Callback"/> and <see cref="P:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaInvisibleTagHelper.FormId"/> are null or empty.</exception>
        </member>
        <member name="T:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaScriptTagHelper">
            <summary>
            Adds a script tag, which will load the required reCAPTCHA API.
            </summary>
            <remarks>
            In case that you use an onload callback function you must place this tag after the callback script, to avoid race conditions.
            </remarks>
        </member>
        <member name="M:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaScriptTagHelper.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Griesoft.AspNetCore.ReCaptcha.Configuration.RecaptchaSettings})">
            <summary>
            
            </summary>
            <param name="settings"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaScriptTagHelper.Render">
            <summary>
            Set the rendering mode for the script.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaScriptTagHelper.OnloadCallback">
            <summary>
            Set the name of your callback function, that will be executed when reCAPTCHA has finished loading.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaScriptTagHelper.Language">
            <summary>
            Set a language code to force reCAPTCHA loading in the specified language. If not set language
            will be detected automatically by reCAPTCHA. For a list of valid language codes visit: 
            https://developers.google.com/recaptcha/docs/language
            </summary>
        </member>
        <member name="M:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaScriptTagHelper.Process(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)">
            <inheritdoc/>
        </member>
        <member name="T:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaTagHelper">
            <summary>
            A tag helper which adds a Google reCAPTCHA check box to your page.
            </summary>
            <remarks>
            If the reCAPTCHA element is outside of the form, the response token is not included in your form which will result in response verification failure.
            This can be prevented by either placing the reCAPTCHA inside your form or by using a callback function which will add the token to your form after the
            challenge was successfully completed.
            </remarks>
             <example>
            The simplest use of the tag would be:
            <code>
            <recaptcha />
            </code>
            
            Which will translate into the following HTML:
            <code>
            <div class="g-recaptcha" data-sitekey="your_site_key" data-size="normal" data-theme="light"></div>
            </code>
            </example>
        </member>
        <member name="M:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaTagHelper.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Griesoft.AspNetCore.ReCaptcha.Configuration.RecaptchaSettings},Microsoft.Extensions.Options.IOptionsMonitor{Griesoft.AspNetCore.ReCaptcha.Configuration.RecaptchaOptions})">
            <summary>
            
            </summary>
            <param name="settings"></param>
            <param name="options"></param>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaTagHelper.Theme">
            <summary>
            Set the theme for the reCAPTCHA element.
            </summary>
            <remarks>
            The invisible theme is not a option, because you should use <see cref="T:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaInvisibleTagHelper"/> instead for that.
            </remarks>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaTagHelper.Size">
            <summary>
            Set the size for the reCAPTCHA element.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaTagHelper.TabIndex">
            <summary>
            Set the tabindex of the reCAPTCHA element. If other elements in your page use tabindex, it should be set to make user navigation easier.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaTagHelper.Callback">
            <summary>
            Set the name of your callback function, executed when the user submits a successful response. The "g-recaptcha-response" token is passed to your callback.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaTagHelper.ExpiredCallback">
            <summary>
            Set the name of your callback function, executed when the reCAPTCHA response expires and the user needs to re-verify.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaTagHelper.ErrorCallback">
            <summary>
            Set the name of your callback function, executed when reCAPTCHA encounters an error (usually network connectivity) and cannot continue until connectivity is restored. 
            If you specify a function here, you are responsible for informing the user that they should retry.
            </summary>
        </member>
        <member name="M:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaTagHelper.Process(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)">
            <inheritdoc />
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaV3TagHelper">
            <summary>
            A reCAPTCHA V3 tag helper, which can be used to automatically bind the challenge to a button.
            </summary>
            <remarks>
            The <see cref="P:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaV3TagHelper.FormId"/> is required. With the exception that you set a <see cref="P:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaV3TagHelper.Callback"/> instead.
            When setting both the value set to <c>Callback</c> always wins and the <c>FormId</c> value is basically irrelevant.
            
            For easiest use of this tag helper set only the <c>FormId</c>. This will add a default callback function to the body. That function does
            submit the form after a successful reCAPTCHA challenge.
            
            If the tag is not inside the form that is going to be submitted, you should use a custom callback function. The default callback function
            does not add the reCAPTCHA token to the form, which will result in response verification failure.
            </remarks>
            <example>
            The simplest use of the tag would be:
            <code>
            <recaptchav3 formid="myForm" action="submit">Submit</recaptchav3>
            </code>
            
            Which will translate into the following HTML:
            <code>
            <button class="g-recaptcha" data-sitekey="your_site_key" data-callback='submitmyForm' data-action='submit'>Submit</button>
            </code>
            </example>
        </member>
        <member name="M:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaV3TagHelper.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Griesoft.AspNetCore.ReCaptcha.Configuration.RecaptchaSettings},Microsoft.AspNetCore.Mvc.Razor.TagHelpers.ITagHelperComponentManager)">
            <summary>
            
            </summary>
            <param name="settings"></param>
            <param name="tagHelperComponentManager"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaV3TagHelper.FormId">
            <summary>
            The id of the form that will be submitted after a successful reCAPTCHA challenge. 
            </summary>
            <remarks>This does only apply when not specifying a <see cref="P:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaV3TagHelper.Callback"/>.</remarks>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaV3TagHelper.Callback">
            <summary>
            Set the name of your callback function, which is called when the reCAPTCHA challenge was successful. 
            A "g-recaptcha-response" token is added to your callback function parameters for server-side verification.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaV3TagHelper.Action">
            <summary>
            The name of the action that was triggered.
            </summary>
            <remarks>You should verify that the server-side verification response returns the same action.</remarks>
        </member>
        <member name="M:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaV3TagHelper.Process(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)">
            <inheritdoc />
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.InvalidOperationException">Thrown when both <see cref="P:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaV3TagHelper.Callback"/> and <see cref="P:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaV3TagHelper.FormId"/> or <see cref="P:Griesoft.AspNetCore.ReCaptcha.TagHelpers.RecaptchaV3TagHelper.Action"/> are/is null or empty.</exception>
        </member>
        <member name="T:Griesoft.AspNetCore.ReCaptcha.ValidationError">
            <summary>
            Recaptcha validation error reason message enum fields.
            </summary>
        </member>
        <member name="F:Griesoft.AspNetCore.ReCaptcha.ValidationError.Undefined">
            <summary>
            Something went wrong in a very bad way. You can consider yourself lucky when you hit this error.
            </summary>
        </member>
        <member name="F:Griesoft.AspNetCore.ReCaptcha.ValidationError.MissingInputSecret">
            <summary>
            No input secret was provided. Make sure you have configured the service correctly.
            </summary>
        </member>
        <member name="F:Griesoft.AspNetCore.ReCaptcha.ValidationError.InvalidInputSecret">
            <summary>
            The secret parameter is invalid or malformed. Make sure you have not switched the secret key with the site key accidentally.
            </summary>
        </member>
        <member name="F:Griesoft.AspNetCore.ReCaptcha.ValidationError.MissingInputResponse">
            <summary>
            The response token is missing.
            </summary>
        </member>
        <member name="F:Griesoft.AspNetCore.ReCaptcha.ValidationError.InvalidInputResponse">
            <summary>
            The response parameter is invalid or malformed.
            </summary>
        </member>
        <member name="F:Griesoft.AspNetCore.ReCaptcha.ValidationError.BadRequest">
            <summary>
            The request is invalid or malformed.
            </summary>
        </member>
        <member name="F:Griesoft.AspNetCore.ReCaptcha.ValidationError.TimeoutOrDuplicate">
            <summary>
            The response is no longer valid: either is too old or has been used previously.
            </summary>
        </member>
        <member name="F:Griesoft.AspNetCore.ReCaptcha.ValidationError.HttpRequestFailed">
            <summary>
            The connection to the reCAPTCHA validation endpoint failed.
            </summary>
        </member>
        <member name="T:Griesoft.AspNetCore.ReCaptcha.ValidationFailedAction">
            <summary>
            Options which specify what to do with a HTTP request when a reCAPTCHA response token was invalid.
            </summary>
        </member>
        <member name="F:Griesoft.AspNetCore.ReCaptcha.ValidationFailedAction.Unspecified">
            <summary>
            
            </summary>
        </member>
        <member name="F:Griesoft.AspNetCore.ReCaptcha.ValidationFailedAction.BlockRequest">
            <summary>
            The validation filter will block and stop execution of requests which did fail reCAPTCHA response verification.
            </summary>
        </member>
        <member name="F:Griesoft.AspNetCore.ReCaptcha.ValidationFailedAction.ContinueRequest">
            <summary>
            The validation filter will allow the request to continue even if the reCAPTCHA response verification failed.
            </summary>
        </member>
        <member name="T:Griesoft.AspNetCore.ReCaptcha.Filters.IRecaptchaValidationFailedResult">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> that is used when the reCAPTCHA validation failed. 
            This can be matched inside MVC result filters to process the validation failure.
            </summary>
        </member>
        <member name="T:Griesoft.AspNetCore.ReCaptcha.Filters.IValidateRecaptchaFilter">
            <summary>
            An action filter which does validate that the request contains a valid reCAPTCHA token.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.Filters.IValidateRecaptchaFilter.OnValidationFailedAction">
            <summary>
            The action that the filter should take when validation of a token fails.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.Filters.IValidateRecaptchaFilter.Action">
            <summary>
            The reCAPTCHA V3 action name.
            </summary>
            <remarks>
            This will also be validated for a matching action name in the validation response from the reCAPTCHA service.
            </remarks>
        </member>
        <member name="T:Griesoft.AspNetCore.ReCaptcha.Filters.RecaptchaValidationFailedResult">
            <summary>
            A bad request result used for reCAPTCHA validation failures. Use <see cref="T:Griesoft.AspNetCore.ReCaptcha.Filters.IRecaptchaValidationFailedResult"/> to
            match for validation failures inside MVC result filters.
            </summary>
        </member>
        <member name="M:Griesoft.AspNetCore.ReCaptcha.Filters.RecaptchaValidationFailedResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Griesoft.AspNetCore.ReCaptcha.Localization.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.Localization.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.Localization.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.Localization.Resources.ActionPropertyNullErrorMessage">
            <summary>
              Looks up a localized string similar to The action is a madatory property, but was not set. .
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.Localization.Resources.CallbackPropertyNullErrorMessage">
            <summary>
              Looks up a localized string similar to A callback function name must be specified. Invisible reCAPTCHA does not work without it..
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.Localization.Resources.InvalidResponseTokenMessage">
            <summary>
              Looks up a localized string similar to The reCAPTCHA response token was not valid. Blocked a bot there, yay!.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.Localization.Resources.RecaptchaResponseTokenMissing">
            <summary>
              Looks up a localized string similar to Could not retrieve the reCAPTCHA response token for validation..
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.Localization.Resources.RequestFailedErrorMessage">
            <summary>
              Looks up a localized string similar to The reCAPTCHA validation HTTP request failed..
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.Localization.Resources.RequiredServiceNotRegisteredErrorMessage">
            <summary>
              Looks up a localized string similar to The required services for the ValidateRecaptchaAttribute are not registered..
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.Localization.Resources.ValidationUnexpectedErrorMessage">
            <summary>
              Looks up a localized string similar to Something went wrong very badly at the reCAPTCHA validation process..
            </summary>
        </member>
        <member name="T:Griesoft.AspNetCore.ReCaptcha.ValidationResponse">
            <summary>
            Recaptcha validation response model.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.ValidationResponse.Success">
            <summary>
            Validation success status.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.ValidationResponse.Score">
            <summary>
            The score for this request (0.0 - 1.0). Only used with reCAPTCHA V3.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.ValidationResponse.Action">
            <summary>
            The action name for this request (important to verify). Only used with reCAPTCHA V3.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.ValidationResponse.ChallengeTimeStamp">
            <summary>
            Time stamp of the challenge load.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.ValidationResponse.Hostname">
            <summary>
            The host name of the site where the reCAPTCHA was solved.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.ValidationResponse.Errors">
            <summary>
            List of <see cref="T:Griesoft.AspNetCore.ReCaptcha.ValidationError"/>'s, if any occurred.
            </summary>
        </member>
        <member name="T:Griesoft.AspNetCore.ReCaptcha.Services.IRecaptchaService">
            <summary>
            A service for reCAPTCHA response back-end validation.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.Services.IRecaptchaService.ValidationResponse">
            <summary>
            Access the validation response of the last validation that this service did perform.
            </summary>
            <remarks>
            This service is registered as transient (or should be) which means the validation response will
            always match the request that instantiated this service.
            </remarks>
        </member>
        <member name="M:Griesoft.AspNetCore.ReCaptcha.Services.IRecaptchaService.ValidateRecaptchaResponse(System.String,System.String)">
            <summary>
            Validate the reCAPTCHA response token.
            </summary>
            <param name="token">The response token.</param>
            <param name="remoteIp">If set, the remote IP will be send to Google for validation too.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:Griesoft.AspNetCore.ReCaptcha.Services.RecaptchaService">
            <inheritdoc />
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.Services.RecaptchaService.ValidationResponse">
            <inheritdoc />
        </member>
        <member name="M:Griesoft.AspNetCore.ReCaptcha.Services.RecaptchaService.ValidateRecaptchaResponse(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Griesoft.AspNetCore.ReCaptcha.ValidateRecaptchaAttribute">
            <summary>
            Validates an incoming request that it contains a valid ReCaptcha token.
            </summary>
            <remarks>
            Can be applied to a specific action or to a controller which would validate all incoming requests to it.
            </remarks>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.ValidateRecaptchaAttribute.Order">
            <inheritdoc />
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.ValidateRecaptchaAttribute.IsReusable">
            <inheritdoc />
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.ValidateRecaptchaAttribute.ValidationFailedAction">
            <summary>
            If set to <see cref="F:Griesoft.AspNetCore.ReCaptcha.ValidationFailedAction.BlockRequest"/>, the requests that do not contain a valid reCAPTCHA response token will be canceled. 
            If this is set to anything else than <see cref="F:Griesoft.AspNetCore.ReCaptcha.ValidationFailedAction.Unspecified"/>, this will override the global behavior.
            </summary>
        </member>
        <member name="P:Griesoft.AspNetCore.ReCaptcha.ValidateRecaptchaAttribute.Action">
            <summary>
            The name of the action that is verified.
            </summary>
            <remarks>
            This is a reCAPTCHA V3 feature and should be used only when validating V3 challenges.
            </remarks>
        </member>
        <member name="M:Griesoft.AspNetCore.ReCaptcha.ValidateRecaptchaAttribute.CreateInstance(System.IServiceProvider)">
            <summary>
            Creates an instance of the executable filter.
            </summary>
            <param name="serviceProvider">The request <see cref="T:System.IServiceProvider"/>.</param>
            <returns>An instance of the executable filter.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if the required services are not registered.</exception>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.RecaptchaServiceExtensions">
            <summary>
            <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> extension methods for easy service registration in the StartUp.cs.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.RecaptchaServiceExtensions.AddRecaptchaService(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Griesoft.AspNetCore.ReCaptcha.Configuration.RecaptchaOptions})">
            <summary>
            Register the <see cref="T:Griesoft.AspNetCore.ReCaptcha.Services.RecaptchaService"/> to the web project and all it's dependencies.
            </summary>
            <param name="services"></param>
            <param name="options">Specify global options for the service.</param>
            <returns></returns>
        </member>
    </members>
</doc>
